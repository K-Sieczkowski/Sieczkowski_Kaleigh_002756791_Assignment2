/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import assignment2_hospitalmodel.Patient.Patient;
import assignment2_hospitalmodel.Patient.PatientDirectory;
import assignment2_hospitalmodel.doctor.Doctor;
import assignment2_hospitalmodel.doctor.DoctorDirectory;
import assignment2_hospitalmodel.encounter.Encounter;
import assignment2_hospitalmodel.encounter.EncounterHistory;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ksiec
 */
public class DoctorWorkPanel extends javax.swing.JPanel {

    private EncounterHistory encounters;
    private DoctorDirectory doctors;
    private PatientDirectory patients;

    /**
     * Creates new form DoctorPanel
     *
     * @param ptd
     * @param dd
     * @param eh
     */
    public DoctorWorkPanel(PatientDirectory ptd, DoctorDirectory dd, EncounterHistory eh) {
        this.encounters = eh;
        this.doctors = dd;
        this.patients = ptd;
        initComponents();
        populateEncounterTbl();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        encSearchTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        encSearchBtn1 = new javax.swing.JButton();
        encClearBtn = new javax.swing.JButton();
        viewEncBtn = new javax.swing.JButton();
        deleteEncBtn = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        dateTxt = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        nameTxt = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        complaintTxt = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        respiratoryTxt = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        heartTxt = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        tempTxt = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        bpTxt = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        weightTxt = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        diagnosisTxt = new javax.swing.JTextField();
        updateEncBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        encounterTbl = new javax.swing.JTable();
        patientYesBtn1 = new javax.swing.JRadioButton();
        patientNoBtn1 = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        normalTxt = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        encDocNameTxt = new javax.swing.JTextField();
        eIDTxt = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        encDateTxt = new javax.swing.JTextField();
        encPatientNameTxt = new javax.swing.JTextField();
        encChiefTxt = new javax.swing.JTextField();
        encRespiratoryTxt = new javax.swing.JTextField();
        encHeartRateTxt = new javax.swing.JTextField();
        encTempTxt = new javax.swing.JTextField();
        encBPTxt = new javax.swing.JTextField();
        encWeightTxt = new javax.swing.JTextField();
        encDiagnosisTxt = new javax.swing.JTextField();
        encSaveBtn = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        encIDTxt = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        docNameTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(227, 227, 248));
        setPreferredSize(new java.awt.Dimension(1070, 800));

        jTabbedPane1.setBackground(new java.awt.Color(227, 227, 248));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(1070, 800));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1070, 685));

        jPanel1.setBackground(new java.awt.Color(227, 227, 248));
        jPanel1.setPreferredSize(new java.awt.Dimension(1070, 870));

        encSearchTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encSearchTxtActionPerformed(evt);
            }
        });

        jLabel2.setText("Search Bar:");

        encSearchBtn1.setText("Search");
        encSearchBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encSearchBtn1ActionPerformed(evt);
            }
        });

        encClearBtn.setText("Clear Search");
        encClearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encClearBtnActionPerformed(evt);
            }
        });

        viewEncBtn.setText("View Encounter");
        viewEncBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewEncBtnActionPerformed(evt);
            }
        });

        deleteEncBtn.setText("Delete");
        deleteEncBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEncBtnActionPerformed(evt);
            }
        });

        jLabel13.setText("Date:");

        jLabel14.setText("Patient Name:");

        jLabel15.setText("Chief Complaint:");

        jLabel16.setText("Respiratory Rate:");

        jLabel17.setText("Heart Rate:");

        heartTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heartTxtActionPerformed(evt);
            }
        });

        jLabel18.setText("Temperature:");

        jLabel19.setText("Blood Pressure:");

        bpTxt.setMaximumSize(new java.awt.Dimension(270, 270));
        bpTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bpTxtActionPerformed(evt);
            }
        });

        jLabel20.setText("Weight:");

        jLabel21.setText("Update is Normal:");

        jLabel22.setText("Diagnosis:");

        updateEncBtn.setText("Update");
        updateEncBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateEncBtnActionPerformed(evt);
            }
        });

        encounterTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Enc ID", "Patient", "Doctor", "Chief Complaint", "RR", "HR", "Temp", "BP", "Weight", "Is Normal?", "Diagnosis"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(encounterTbl);

        patientYesBtn1.setText("Yes");
        patientYesBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientYesBtn1ActionPerformed(evt);
            }
        });

        patientNoBtn1.setText("No");
        patientNoBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientNoBtn1ActionPerformed(evt);
            }
        });

        jLabel11.setText("Patient is Normal:");

        jLabel25.setText("Doctor Name:");

        jLabel26.setText("Encounter ID:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(encSearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(255, 255, 255))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(updateEncBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel13)
                                        .addComponent(jLabel14)
                                        .addComponent(jLabel15)
                                        .addComponent(jLabel17)
                                        .addComponent(jLabel19)
                                        .addComponent(jLabel11)
                                        .addComponent(jLabel21))
                                    .addGap(505, 505, 505)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(diagnosisTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(weightTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tempTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(respiratoryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(encDocNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(eIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGap(106, 106, 106)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(encSearchBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(encClearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 872, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(viewEncBtn)
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(dateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(deleteEncBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(patientYesBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(patientNoBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(normalTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                                            .addComponent(complaintTxt)
                                            .addComponent(nameTxt)
                                            .addComponent(heartTxt)
                                            .addComponent(bpTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel26)
                                    .addComponent(jLabel25)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel22))
                                .addGap(327, 327, 327)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(encSearchBtn1)
                    .addComponent(encClearBtn)
                    .addComponent(jLabel2)
                    .addComponent(encSearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewEncBtn)
                    .addComponent(deleteEncBtn))
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(dateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26)
                    .addComponent(eIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jLabel14)
                    .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(encDocNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(complaintTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(respiratoryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(heartTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(tempTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bpTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(weightTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel19))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(diagnosisTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(normalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateEncBtn)
                    .addComponent(jLabel21)
                    .addComponent(patientYesBtn1)
                    .addComponent(patientNoBtn1))
                .addContainerGap(138, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("View Encounters", jPanel1);

        jPanel2.setBackground(new java.awt.Color(227, 227, 248));
        jPanel2.setPreferredSize(new java.awt.Dimension(1070, 870));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Date:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Patient Name:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Chief Complaint:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Respiratory Rate:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Heart Rate:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Temperature:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Blood Pressure:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("Weight in Pounds:");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setText("Diagnosis:");

        encRespiratoryTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encRespiratoryTxtActionPerformed(evt);
            }
        });

        encSaveBtn.setText("Save");
        encSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encSaveBtnActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel23.setText("Encounter ID:");

        encIDTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encIDTxtActionPerformed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel24.setText("Doctor Name:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(encSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel12)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(encRespiratoryTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
                            .addComponent(encHeartRateTxt)
                            .addComponent(encTempTxt)
                            .addComponent(encBPTxt)
                            .addComponent(encWeightTxt)
                            .addComponent(encDiagnosisTxt)
                            .addComponent(encPatientNameTxt)
                            .addComponent(encChiefTxt)
                            .addComponent(encDateTxt)
                            .addComponent(encIDTxt)
                            .addComponent(docNameTxt))))
                .addGap(221, 221, 221))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(encDateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(encIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(docNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(encPatientNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(encChiefTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(encRespiratoryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(encHeartRateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(encTempTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(encBPTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(encWeightTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(encDiagnosisTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addComponent(encSaveBtn)
                .addContainerGap(233, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Add Encounter & Vitals", jPanel2);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setText("Doctor Work Area");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGap(453, 453, 453)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 774, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void encSearchBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encSearchBtn1ActionPerformed
        String s = encSearchTxt.getText();
        newEncFilter(s);
    }//GEN-LAST:event_encSearchBtn1ActionPerformed

    private void encClearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encClearBtnActionPerformed
        String s = ("");
        newEncFilter(s);
        encSearchTxt.setText("");
    }//GEN-LAST:event_encClearBtnActionPerformed

    private void deleteEncBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEncBtnActionPerformed
        int selectedRowIndex = encounterTbl.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) encounterTbl.getModel();
        Patient p = patients.getPatientByName(String.valueOf(model.getValueAt(selectedRowIndex, 2)));
        Encounter selectedEncounter = (Encounter) model.getValueAt(selectedRowIndex, 0);
        encounters.deleteEncounter(selectedEncounter);
        p.getEncounterHistory().deleteEncounter(selectedEncounter);

        JOptionPane.showMessageDialog(this, "Encounter deleted from system.");

        populateEncounterTbl();

    }//GEN-LAST:event_deleteEncBtnActionPerformed

    private void encRespiratoryTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encRespiratoryTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_encRespiratoryTxtActionPerformed

    private void encSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encSaveBtnActionPerformed
        try{
        String date = encDateTxt.getText();
        int id = Integer.parseInt(encIDTxt.getText());
        String name = encPatientNameTxt.getText();
        String docName = docNameTxt.getText();
        String complaint = encChiefTxt.getText();
        int respiratory = Integer.parseInt(encRespiratoryTxt.getText());
        int heart = Integer.parseInt(encHeartRateTxt.getText());
        double temp = Double.parseDouble(encTempTxt.getText());
        double bp = Double.parseDouble(encBPTxt.getText());
        int weight = Integer.parseInt(encWeightTxt.getText());
        String diagnosis = encDiagnosisTxt.getText();

        Patient p = patients.getPatientByName(name);
        Doctor d = doctors.getDoctorByName(docName);

        Encounter e = encounters.newEncounter();
        e.setDate(date);
        e.setID(id);
        e.newChiefComplaint(complaint);
        e.newVitalSigns(respiratory, heart, temp, bp, weight, true);
        e.newDiagnosis(diagnosis);

        p.setEncounterHistory(encounters);

        p.assignToDoctor(d);
        d.assignPatient(p);

        JOptionPane.showMessageDialog(this, "Encounter and vitals added.");

        encDateTxt.setText("");
        encIDTxt.setText("");
        encPatientNameTxt.setText("");
        docNameTxt.setText("");
        encChiefTxt.setText("");
        encRespiratoryTxt.setText("");
        encHeartRateTxt.setText("");
        encTempTxt.setText("");
        encBPTxt.setText("");
        encWeightTxt.setText("");
        encDiagnosisTxt.setText("");

        populateEncounterTbl();
     }catch (NumberFormatException e){
         JOptionPane.showMessageDialog(this, "Please check data types and try again.");
     }

    }//GEN-LAST:event_encSaveBtnActionPerformed

    private void heartTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heartTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_heartTxtActionPerformed

    private void updateEncBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateEncBtnActionPerformed
        int selectedRowIndex = encounterTbl.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to update.");
            return;

        } else if (patientYesBtn1.isSelected()) {

            DefaultTableModel model = (DefaultTableModel) encounterTbl.getModel();
            Patient p = patients.getPatientByName(String.valueOf(model.getValueAt(selectedRowIndex, 2)));
            Doctor d = doctors.getDoctorByName(String.valueOf(model.getValueAt(selectedRowIndex, 3)));
            Encounter selectedEncounter = (Encounter) model.getValueAt(selectedRowIndex, 0);

            selectedEncounter.setDate(dateTxt.getText());
            selectedEncounter.setID(Integer.parseInt(eIDTxt.getText()));
            p.getPerson().setName(nameTxt.getText());
            d.getPerson().setName(encDocNameTxt.getText());
            selectedEncounter.getChiefComplaint().setComplaintDescription(complaintTxt.getText());
            selectedEncounter.getVitalSigns().setRespiratoryRate(Integer.parseInt(respiratoryTxt.getText()));
            selectedEncounter.getVitalSigns().setHeartRate(Integer.parseInt(heartTxt.getText()));
            selectedEncounter.getVitalSigns().setTemperature(Double.parseDouble(tempTxt.getText()));
            selectedEncounter.getVitalSigns().setBloodPressure(Double.parseDouble(bpTxt.getText()));
            selectedEncounter.getVitalSigns().setWeightInPounds(Integer.parseInt(weightTxt.getText()));
            selectedEncounter.getDiagnosis().setDiagnosis(diagnosisTxt.getText());
            selectedEncounter.getVitalSigns().setPatientIsNormal(true);

            JOptionPane.showMessageDialog(this, "Encounter has been updated.");

            dateTxt.setText("");
            eIDTxt.setText("");
            nameTxt.setText("");
            encDocNameTxt.setText("");
            complaintTxt.setText("");
            respiratoryTxt.setText("");
            heartTxt.setText("");
            tempTxt.setText("");
            bpTxt.setText("");
            weightTxt.setText("");
            normalTxt.setText("");
            diagnosisTxt.setText("");

            populateEncounterTbl();

        } else if (patientNoBtn1.isSelected()) {
            DefaultTableModel model = (DefaultTableModel) encounterTbl.getModel();
            Patient p = patients.getPatientByName(String.valueOf(model.getValueAt(selectedRowIndex, 2)));
            Doctor d = doctors.getDoctorByName(String.valueOf(model.getValueAt(selectedRowIndex, 3)));
            Encounter selectedEncounter = (Encounter) model.getValueAt(selectedRowIndex, 0);

            selectedEncounter.setDate(dateTxt.getText());
            selectedEncounter.setID(Integer.parseInt(eIDTxt.getText()));
            p.getPerson().setName(nameTxt.getText());
            d.getPerson().setName(encDocNameTxt.getText());
            selectedEncounter.getChiefComplaint().setComplaintDescription(complaintTxt.getText());
            selectedEncounter.getVitalSigns().setRespiratoryRate(Integer.parseInt(respiratoryTxt.getText()));
            selectedEncounter.getVitalSigns().setHeartRate(Integer.parseInt(heartTxt.getText()));
            selectedEncounter.getVitalSigns().setTemperature(Double.parseDouble(tempTxt.getText()));
            selectedEncounter.getVitalSigns().setBloodPressure(Double.parseDouble(bpTxt.getText()));
            selectedEncounter.getVitalSigns().setWeightInPounds(Integer.parseInt(weightTxt.getText()));
            selectedEncounter.getDiagnosis().setDiagnosis(diagnosisTxt.getText());
            selectedEncounter.getVitalSigns().setPatientIsNormal(false);

            JOptionPane.showMessageDialog(this, "Encounter has been updated.");

            dateTxt.setText("");
            eIDTxt.setText("");
            nameTxt.setText("");
            encDocNameTxt.setText("");
            complaintTxt.setText("");
            respiratoryTxt.setText("");
            heartTxt.setText("");
            tempTxt.setText("");
            bpTxt.setText("");
            weightTxt.setText("");
            normalTxt.setText("");
            diagnosisTxt.setText("");

            populateEncounterTbl();

        } else {

            DefaultTableModel model = (DefaultTableModel) encounterTbl.getModel();
            Patient p = patients.getPatientByName(String.valueOf(model.getValueAt(selectedRowIndex, 2)));
            Doctor d = doctors.getDoctorByName(String.valueOf(model.getValueAt(selectedRowIndex, 3)));
            Encounter selectedEncounter = (Encounter) model.getValueAt(selectedRowIndex, 0);

            selectedEncounter.setDate(dateTxt.getText());
            selectedEncounter.setID(Integer.parseInt(eIDTxt.getText()));
            p.getPerson().setName(nameTxt.getText());
            d.getPerson().setName(encDocNameTxt.getText());
            selectedEncounter.getChiefComplaint().setComplaintDescription(complaintTxt.getText());
            selectedEncounter.getVitalSigns().setRespiratoryRate(Integer.parseInt(respiratoryTxt.getText()));
            selectedEncounter.getVitalSigns().setHeartRate(Integer.parseInt(heartTxt.getText()));
            selectedEncounter.getVitalSigns().setTemperature(Double.parseDouble(tempTxt.getText()));
            selectedEncounter.getVitalSigns().setBloodPressure(Double.parseDouble(bpTxt.getText()));
            selectedEncounter.getVitalSigns().setWeightInPounds(Integer.parseInt(weightTxt.getText()));
            selectedEncounter.getDiagnosis().setDiagnosis(diagnosisTxt.getText());

            JOptionPane.showMessageDialog(this, "Encounter has been updated.");

            dateTxt.setText("");
            eIDTxt.setText("");
            nameTxt.setText("");
            encDocNameTxt.setText("");
            complaintTxt.setText("");
            respiratoryTxt.setText("");
            heartTxt.setText("");
            tempTxt.setText("");
            bpTxt.setText("");
            weightTxt.setText("");
            normalTxt.setText("");
            diagnosisTxt.setText("");

            populateEncounterTbl();
        }


    }//GEN-LAST:event_updateEncBtnActionPerformed

    private void viewEncBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewEncBtnActionPerformed
        int selectedRowIndex = encounterTbl.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) encounterTbl.getModel();
        Patient p = patients.getPatientByName(String.valueOf(model.getValueAt(selectedRowIndex, 2)));
        Doctor d = doctors.getDoctorByName(String.valueOf(model.getValueAt(selectedRowIndex, 3)));
        Encounter selectedEncounter = (Encounter) model.getValueAt(selectedRowIndex, 0);

        dateTxt.setText(String.valueOf(selectedEncounter.getDate()));
        eIDTxt.setText(String.valueOf(selectedEncounter.getID()));
        nameTxt.setText(String.valueOf(p.getPerson().getName()));
        encDocNameTxt.setText(String.valueOf(d.getPerson().getName()));
        complaintTxt.setText(String.valueOf(selectedEncounter.getChiefComplaint().getComplaintDescription()));
        respiratoryTxt.setText(String.valueOf(selectedEncounter.getVitalSigns().getRespiratoryRate()));
        heartTxt.setText(String.valueOf(selectedEncounter.getVitalSigns().getHeartRate()));
        tempTxt.setText(String.valueOf(selectedEncounter.getVitalSigns().getTemperature()));
        bpTxt.setText(String.valueOf(selectedEncounter.getVitalSigns().getBloodPressure()));
        weightTxt.setText(String.valueOf(selectedEncounter.getVitalSigns().getWeightInPounds()));
        normalTxt.setText(String.valueOf(selectedEncounter.getVitalSigns().normalToString()));
        diagnosisTxt.setText(String.valueOf(selectedEncounter.getDiagnosis().getDiagnosis()));


    }//GEN-LAST:event_viewEncBtnActionPerformed

    private void patientYesBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientYesBtn1ActionPerformed
        if (patientYesBtn1.isSelected()) {
            for (Encounter e : encounters.getEncounters()) {
                e.getVitalSigns().setPatientIsNormal(true);
            }
        }

    }//GEN-LAST:event_patientYesBtn1ActionPerformed

    private void patientNoBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientNoBtn1ActionPerformed
        if (patientNoBtn1.isSelected()) {
            for (Encounter e : encounters.getEncounters()) {
                e.getVitalSigns().setPatientIsNormal(false);
            }
        }

    }//GEN-LAST:event_patientNoBtn1ActionPerformed

    private void encIDTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encIDTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_encIDTxtActionPerformed

    private void bpTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bpTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bpTxtActionPerformed

    private void encSearchTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encSearchTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_encSearchTxtActionPerformed

    private void populateEncounterTbl() {
        DefaultTableModel model = (DefaultTableModel) encounterTbl.getModel();
        model.setRowCount(0);

        for (Patient p : patients.getPatients()) {
            if (p.getEncounterHistory().getEncounters().isEmpty()) {

            } else if (p.getEncounterHistory().getEncounters() != null) {
                for (Encounter e : encounters.getEncounters()) {
                    Object[] row = new Object[12];
                    row[0] = e;
                    row[1] = e.getID();
                    row[2] = p.getPerson().getName();
                    row[3] = p.getDoctor().getPerson().getName();
                    row[4] = e.getChiefComplaint().getComplaintDescription();
                    row[5] = e.getVitalSigns().getRespiratoryRate();
                    row[6] = e.getVitalSigns().getHeartRate();
                    row[7] = e.getVitalSigns().getTemperature();
                    row[8] = e.getVitalSigns().getBloodPressure();
                    row[9] = e.getVitalSigns().getWeightInPounds();
                    row[10] = e.getVitalSigns().normalToString();
                    row[11] = e.getDiagnosis().getDiagnosis();

                    model.addRow(row);
                }
            }
        }
    }

    public static boolean isNumeric(String s) {
        if (s == null) {
            return false;
        }
        try {
            int i = Integer.parseInt(s);
        } catch (NumberFormatException nfe) {
            return false;
        }
        return true;
    }

    public void newEncFilter(String s) {
        DefaultTableModel model = (DefaultTableModel) encounterTbl.getModel();
        TableRowSorter<DefaultTableModel> t = new TableRowSorter<DefaultTableModel>(model);
        encounterTbl.setRowSorter(t);
        t.setRowFilter(RowFilter.regexFilter(s));

    }

    public EncounterHistory getEncounters() {
        return encounters;
    }

    public void setEncounters(EncounterHistory encounters) {
        this.encounters = encounters;
    }

    public PatientDirectory getPatients() {
        return patients;
    }

    public void setPatients(PatientDirectory patients) {
        this.patients = patients;
    }

    public DoctorDirectory getDoctors() {
        return doctors;
    }

    public void setDoctors(DoctorDirectory doctors) {
        this.doctors = doctors;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bpTxt;
    private javax.swing.JTextField complaintTxt;
    private javax.swing.JTextField dateTxt;
    private javax.swing.JButton deleteEncBtn;
    private javax.swing.JTextField diagnosisTxt;
    private javax.swing.JTextField docNameTxt;
    private javax.swing.JTextField eIDTxt;
    private javax.swing.JTextField encBPTxt;
    private javax.swing.JTextField encChiefTxt;
    private javax.swing.JButton encClearBtn;
    private javax.swing.JTextField encDateTxt;
    private javax.swing.JTextField encDiagnosisTxt;
    private javax.swing.JTextField encDocNameTxt;
    private javax.swing.JTextField encHeartRateTxt;
    private javax.swing.JTextField encIDTxt;
    private javax.swing.JTextField encPatientNameTxt;
    private javax.swing.JTextField encRespiratoryTxt;
    private javax.swing.JButton encSaveBtn;
    private javax.swing.JButton encSearchBtn1;
    private javax.swing.JTextField encSearchTxt;
    private javax.swing.JTextField encTempTxt;
    private javax.swing.JTextField encWeightTxt;
    private javax.swing.JTable encounterTbl;
    private javax.swing.JTextField heartTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JTextField normalTxt;
    private javax.swing.JRadioButton patientNoBtn1;
    private javax.swing.JRadioButton patientYesBtn1;
    private javax.swing.JTextField respiratoryTxt;
    private javax.swing.JTextField tempTxt;
    private javax.swing.JButton updateEncBtn;
    private javax.swing.JButton viewEncBtn;
    private javax.swing.JTextField weightTxt;
    // End of variables declaration//GEN-END:variables
}
